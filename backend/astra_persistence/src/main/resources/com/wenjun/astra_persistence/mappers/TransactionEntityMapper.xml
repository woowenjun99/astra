<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wenjun.astra_persistence.mappers.TransactionEntityMapper">
  <resultMap id="BaseResultMap" type="com.wenjun.astra_persistence.models.TransactionEntity">
    <id column="id" jdbcType="OTHER" property="id" />
    <result column="amount" jdbcType="BIGINT" property="amount" />
    <result column="category" jdbcType="INTEGER" property="category" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, amount, category, date, name, user_id
  </sql>
  <select id="selectByExample" parameterType="com.wenjun.astra_persistence.models.TransactionEntityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from transactions
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Object" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from transactions
    where id = #{id,jdbcType=OTHER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Object">
    delete from transactions
    where id = #{id,jdbcType=OTHER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wenjun.astra_persistence.models.TransactionEntityExample">
    delete from transactions
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wenjun.astra_persistence.models.TransactionEntity">
    insert into transactions (id, amount, category, 
      date, name, user_id
      )
    values (#{id,jdbcType=OTHER}, #{amount,jdbcType=BIGINT}, #{category,jdbcType=INTEGER}, 
      #{date,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wenjun.astra_persistence.models.TransactionEntity">
    insert into transactions
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=OTHER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=BIGINT},
      </if>
      <if test="category != null">
        #{category,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wenjun.astra_persistence.models.TransactionEntityExample" resultType="java.lang.Long">
    select count(*) from transactions
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update transactions
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=OTHER},
      </if>
      <if test="row.amount != null">
        amount = #{row.amount,jdbcType=BIGINT},
      </if>
      <if test="row.category != null">
        category = #{row.category,jdbcType=INTEGER},
      </if>
      <if test="row.date != null">
        date = #{row.date,jdbcType=TIMESTAMP},
      </if>
      <if test="row.name != null">
        name = #{row.name,jdbcType=VARCHAR},
      </if>
      <if test="row.userId != null">
        user_id = #{row.userId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update transactions
    set id = #{row.id,jdbcType=OTHER},
      amount = #{row.amount,jdbcType=BIGINT},
      category = #{row.category,jdbcType=INTEGER},
      date = #{row.date,jdbcType=TIMESTAMP},
      name = #{row.name,jdbcType=VARCHAR},
      user_id = #{row.userId,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wenjun.astra_persistence.models.TransactionEntity">
    update transactions
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=BIGINT},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=OTHER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wenjun.astra_persistence.models.TransactionEntity">
    update transactions
    set amount = #{amount,jdbcType=BIGINT},
      category = #{category,jdbcType=INTEGER},
      date = #{date,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=OTHER}
  </update>
</mapper>